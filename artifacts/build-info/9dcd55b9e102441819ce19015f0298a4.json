{
	"id": "9dcd55b9e102441819ce19015f0298a4",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.7.0",
	"solcLongVersion": "0.7.0+commit.9e61f92b",
	"input": {
		"language": "Solidity",
		"sources": {
			"constructors.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity >= 0.7.0 < 0.9.0;\r\n\r\n/*\r\n\r\nCONSTRUCTORS = a special function using  constructor keyword\r\nIt initialises state variables of a contract. (when we are refering to the state of a contract we are referring to state variables)\r\n\r\nkey characteristics:\r\n\r\n1. A contract can only haveone contructor. \r\n\r\n2. A constructor code is executed once when a contract is created and it is used to initialize contract state \r\n    Means that when a contract is deployed, the constructor is used to initialize the contract state\r\n\r\n3. After a constructor code is executed, the final code is deployed to the blockchain \r\n    This final code includes public functions and code reachable through public functions.\r\n    Constructor code or any internal method used only by constructor are not included in final code. \r\n    So whatever method we write in our constructor, it will not be present in the final code!! it is just used to initialize contract state\r\n\r\n    A constructor can be either public or internal\r\n\r\n    A internal constructor marks the contract as abstract\r\n\r\n    In case , no constructor is defined, a default constructor is present in the contract\r\n\r\n\r\n*/\r\n\r\ncontract Member{\r\n\r\n    string name;\r\n    uint age;\r\n\r\n    //initialize name and age upon deployment\r\n\r\n\r\n}\r\n\r\n\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"constructors.sol": {
				"Member": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"constructors.sol\":1202:1309  contract Member{\r... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"constructors.sol\":1202:1309  contract Member{\r... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220987d666b5c0304e608d8584024ebbd72b92f53e186bd600c13d1a0cd4ea540e764736f6c63430007000033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea2646970667358221220987d666b5c0304e608d8584024ebbd72b92f53e186bd600c13d1a0cd4ea540e764736f6c63430007000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP9 PUSH30 0x666B5C0304E608D8584024EBBD72B92F53E186BD600C13D1A0CD4EA540E7 PUSH5 0x736F6C6343 STOP SMOD STOP STOP CALLER ",
							"sourceMap": "1202:107:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea2646970667358221220987d666b5c0304e608d8584024ebbd72b92f53e186bd600c13d1a0cd4ea540e764736f6c63430007000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP9 PUSH30 0x666B5C0304E608D8584024EBBD72B92F53E186BD600C13D1A0CD4EA540E7 PUSH5 0x736F6C6343 STOP SMOD STOP STOP CALLER ",
							"sourceMap": "1202:107:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1202,
									"end": 1309,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 1202,
									"end": 1309,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1202,
									"end": 1309,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1309,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1309,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1309,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1309,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1202,
									"end": 1309,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1309,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1202,
									"end": 1309,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1309,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1309,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1202,
									"end": 1309,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1309,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1309,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1202,
									"end": 1309,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1309,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1202,
									"end": 1309,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1202,
									"end": 1309,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 1309,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1202,
									"end": 1309,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220987d666b5c0304e608d8584024ebbd72b92f53e186bd600c13d1a0cd4ea540e764736f6c63430007000033",
									".code": [
										{
											"begin": 1202,
											"end": 1309,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1202,
											"end": 1309,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1202,
											"end": 1309,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1309,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1202,
											"end": 1309,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1309,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.0+commit.9e61f92b\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"constructors.sol\":\"Member\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"constructors.sol\":{\"keccak256\":\"0xa3565c00b1c6308cbbeae5cecd63809899a47c27832836798375b222197d2543\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f7e9f4e3c4bdeedc54872414c896b6e26ee6673501c4598a190957c218f5efc4\",\"dweb:/ipfs/QmcqCm3UGqoy6gJoSrR587iYCATMWBxMsawg6RwEcroa7Z\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3,
								"contract": "constructors.sol:Member",
								"label": "name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 5,
								"contract": "constructors.sol:Member",
								"label": "age",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"constructors.sol": {
				"ast": {
					"absolutePath": "constructors.sol",
					"exportedSymbols": {
						"Member": [
							6
						]
					},
					"id": 7,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:33:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 6,
							"linearizedBaseContracts": [
								6
							],
							"name": "Member",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 3,
									"mutability": "mutable",
									"name": "name",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 6,
									"src": "1226:11:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 2,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1226:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 5,
									"mutability": "mutable",
									"name": "age",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 6,
									"src": "1244:8:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 4,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "1244:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "internal"
								}
							],
							"scope": 7,
							"src": "1202:107:0"
						}
					],
					"src": "33:1282:0"
				},
				"id": 0
			}
		}
	}
}